plugins {
    id 'com.android.application'
}
//https://stackoverflow.com/questions/13939384/what-is-the-best-practice-to-manage-the-version-of-my-android-app
def versionMajor = 1
def versionMinor = 0
def versionPatch = 2
def versionBuild = 0 // bump for dogfood builds, public betas, etc.

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "pe.gob.onpe.sea.android_usb"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.2.0-alpha02' // It's required to render correctly the layout
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'me.jahnen:libaums:0.8.0'                            // It's required to manage the communication with usb drive
    // https://github.com/bosphere/Android-FileLogger#android-filelogger
    implementation 'com.github.bosphere.android-filelogger:filelogger:1.0.7'    // It's required for the log
}